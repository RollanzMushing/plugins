<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>

<muclient>
<plugin
   name="Learning_Mapper"
   author="Nick Gammon"
   id="99c74b2685e425d3b6ed6a7d"
   language="Lua"
   purpose="AI interface to mapper to learn descriptions etc."
   save_state="y"
   date_written="2020-01-23 11:29:22"
   requires="5.05"
   version="1.0"
   >
<description trim="y">
<![CDATA[
AUTOMATIC MAPPER ...  by Nick Gammon

The window can be dragged to a new location by dragging the room name.

Your current room is always in the center with a bolder border.

LH-click on a room to speed-walk to it. RH-click on a room for options.

LH-click on the "*" button on the bottom-left corner to configure it.

** WHY DOES THE MAP CHANGE? **

The mapper draws from your room outwards - that is, it draws your room's exits
first, then the rooms leading from those rooms, and so on.

Eventually it finds an overlap, and draws a short "stub" line to indicate there
is a room there for which there isn't space to draw. If you get closer to that
room the stub will disappear and the room(s) in question will be drawn.

ACTIONS

mapper help         --> this help  (or click the "?" button on the bottom right)
mapper zoom out     --> zoom out   (or use the mouse-wheel)
mapper zoom in      --> zoom in    (or use the mouse-wheel)
mapper hide         --> hide map
mapper show         --> show map

FINDING THINGS

mapper bookmarks    --> show nearby rooms that you bookmarked
mapper find <text>  --> search for text (eg. mapper find shop)
mapper where <room> --> show directions to a room (given a room ID)

MOVING

mapper goto <room>  --> walk to a room by its room ID
mapper stop         --> cancel any current speedwalk
mapper resume       --> resume last speedwalk or hyperlinked speedwalk

LEARNING INTERFACE CONTROL

mapper learn        --> toggle on/off the mapper learning window and line informationwindow

mapper corpus info  --> shows how many times you trained various different line types
mapper corpus       --> show the entire mapper corpus (can be very lengthy)
mapper corpus reset --> deletes the entire mapper corpus so it will need to be trained again
                       (after a confirmation dialog)

MAPPER CONFIGURATION

mapper draw room on <linetype> --> when to draw the new room. Line types are one of:
                      room name, description, exits, prompt
                      For most MUDS: Use "exits" because exits usually come last. However if the exits come before the description draw after the description.
mapper status background <colour>  --> background colour for the room types status window (eg. black)
mapper status border <colour>      --> colour of the border of the room types status window (eg. darkgray)
mapper status text <colour>        --> colour of the text in the room types status window (eg. lightgreen)
mapper uid size <size>             --> how many characters of the unique ID to show in room information (3 to 25)
mapper activate description after exits  --> Only consider lines to be description lines directly after exit lines (use for MUDs with descriptions after the exits)
mapper activate description always       --> Always consider lines to be description lines (use for MUDs with exits after descriptions) (default)
mapper blank lines terminate line type   --> A blank line is considered to be the the end of a line type (eg. end of a description)
mapper ignore blank lines                --> Blank lines are ignored (default)
mapper add newline to prompt             --> Add a newline to a prompt at the end of a packet
mapper no add newline to prompt          --> Don't add a newline to a prompt at the end of a packet  (default)
mapper config info                       --> Display all of the above configuration items (for discussing in a forum post, for example)

TIPS

* If the mapper seems to lag behind drawing a new room, make sure that you get a complete line *after* the exits line.
* If the MUD supports colours, then use them. The mapper uses the colour of lines to distinguish them from each other.
* Try activating world configuration -> Appearance -> Output -> Convert IAC EOR/GA to new line
* If the MUD has prompts, try forcing a newline after a prompt (the suggestion above might do that)
  For example, on some MUDs you can change the prompt like this: PROMPT %hH %mM %vV>!
  In that case the "!" tells the MUD to send a new line. See your MUD documentation for details.
* You can also try activating the automatic adding of newlines after simple prompts. Type "mapper add newline to prompt"
* If room descriptions are not shown every time you enter a room (but only the first time) turn that option off in the MUD configuration (eg. "toggle brief")
* Also try training prompt lines (they are not otherwise used, but a prompt line helps terminate a non-prompt line)
* If the MUD shows a minimap on the left or right side of description lines, turn that option off in the MUD configuration (eg. "toggle minimap")
* It is important that temporary things (like mobs in a room, people in a room, items on the ground, chat messages) are not considered part of the description. If they are select that line and click "Description: No".
* If the MUD shows everything in one colour, try activating colour output (eg. "term ansi"). There may be configuration options to colour certain types of lines (eg. "ansi roomshort light green"). This will help with recognition of line types. The exact options will vary from MUD to MUD.

LEARNING INTERFACE ALIASES (TRAIN THE MAPPER)

(Type these or make a macro to use instead of clicking on the learning window)

mapper is room name     --> the selected line(s) are the name of a room
mapper not room name    --> the selected line(s) are NOT the name of a room
mapper is description   --> the selected line(s) are a room description
mapper not description  --> the selected line(s) are NOT a room description
mapper is exits         --> the selected line(s) are exits line(s)
mapper not exits        --> the selected line(s) are NOT exits line(s)
mapper is prompt        --> the selected line(s) are prompt line(s)
mapper not prompt       --> the selected line(s) are NOT prompt line(s)

MAPPER DATABASE

mapper debug            --> shows entire mapper database (can be very length)
mapper reset database   --> deletes the entire mapper database, so all mapped rooms are lost
                            (after a confirmation dialog)

]]>
</description>

</plugin>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   keep_evaluating="y"
   match="*"
   script="line_received"
   sequence="1"
  >
  </trigger>
</triggers>


<!--  Aliases  -->

<aliases>

 <alias
   match="mapper is room_name"
   enabled="y"
   omit_from_command_history="y"
   send_to="12"
   sequence="100"
  >
  <send>learn_line_type ("room_name", true)</send>
  </alias>

  <alias
   match="mapper not room_name"
   enabled="y"
   omit_from_command_history="y"
   send_to="12"
   sequence="100"
  >
  <send>learn_line_type ("room_name", false)</send>
  </alias>


  <alias
   match="mapper is description"
   enabled="y"
   omit_from_command_history="y"
   send_to="12"
   sequence="100"
  >
  <send>learn_line_type ("description", true)</send>
  </alias>

  <alias
   match="mapper not description"
   enabled="y"
   omit_from_command_history="y"
   send_to="12"
   sequence="100"
  >
  <send>learn_line_type ("description", false)</send>
  </alias>

 <alias
   match="mapper is exits"
   enabled="y"
   omit_from_command_history="y"
   send_to="12"
   sequence="100"
  >
  <send>learn_line_type ("exits", true)</send>
  </alias>

  <alias
   match="mapper not exits"
   enabled="y"
   omit_from_command_history="y"
   send_to="12"
   sequence="100"
  >
  <send>learn_line_type ("exits", false)</send>
  </alias>

<alias
   match="mapper is prompt"
   enabled="y"
   omit_from_command_history="y"
   send_to="12"
   sequence="100"
  >
  <send>learn_line_type ("prompt", true)</send>
  </alias>

  <alias
   match="mapper not prompt"
   enabled="y"
   omit_from_command_history="y"
   send_to="12"
   sequence="100"
  >
  <send>learn_line_type ("prompt", false)</send>
  </alias>

 <alias
   match="mapper learn"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>toggle_learn_window ()</send>
  </alias>

  <alias
   match="mapper corpus"
   enabled="y"
   send_to="1"
   sequence="100"
   script="show_corpus"
  >
  </alias>

 <alias
   match="mapper corpus reset"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>
    if utils.msgbox ("Throw away the entire learning corpus and start from scratch?",
                     "Confirmation", "yesno", "?", 2) == 'yes' then
      corpus_reset (true)
      ColourNote ("red", "", "Corpus reset")
    end -- if they really want to
  </send>
  </alias>

 <alias
   match="mapper corpus info"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>
    corpus_info ()
  </send>
  </alias>

 <alias
   match="mapper draw room on *"
   enabled="y"
   send_to="1"
   sequence="100"
   script="when_to_draw"
  >
  </alias>

 <alias
   match="mapper status background *"
   enabled="y"
   send_to="1"
   sequence="100"
   script="mapper_status_background"
  >
  </alias>

 <alias
   match="mapper status border *"
   enabled="y"
   send_to="1"
   sequence="100"
   script="mapper_status_border"
  >
  </alias>

 <alias
   match="mapper status text *"
   enabled="y"
   send_to="1"
   sequence="100"
   script="mapper_status_text"
  >
  </alias>

 <alias
   match="^mapper uid size (\d+)$"
   enabled="y"
   regexp="y"
   send_to="1"
   sequence="100"
   script="mapper_uid_size"
  >
  </alias>

 <alias
   match="mapper activate description after exits"
   enabled="y"
   send_to="1"
   sequence="100"
   script="mapper_activate_description_after_exits"
  >
  </alias>

 <alias
   match="mapper activate description always"
   enabled="y"
   send_to="1"
   sequence="100"
   script="mapper_activate_description_always"
  >
  </alias>

 <alias
   match="mapper blank lines terminate line type"
   enabled="y"
   send_to="1"
   sequence="100"
   script="mapper_blank_lines_terminate_line_type"
  >
  </alias>

 <alias
   match="mapper ignore blank lines"
   enabled="y"
   send_to="1"
   sequence="100"
   script="mapper_ignore_blank_lines"
  >
  </alias>

 <alias
   match="mapper add newline to prompt"
   enabled="y"
   send_to="1"
   sequence="100"
   script="mapper_add_newline_to_prompt"
  >
  </alias>

 <alias
   match="mapper no add newline to prompt"
   enabled="y"
   send_to="1"
   sequence="100"
   script="mapper_no_add_newline_to_prompt"
  >
  </alias>

 <alias
   match="mapper config info"
   enabled="y"
   send_to="1"
   sequence="100"
   script="mapper_config_info"
  >
  </alias>


  <alias
   match="mapper reset database"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>
    if utils.msgbox ("Throw away the entire mapping database (rooms and exits) and start from scratch?",
                     "Confirmation", "yesno", "?", 2) == 'yes' then
      rooms = { }
      highest_uid = 0
      inverse_ids = { }
      inverse_desc_hash = { }
      ColourNote ("red", "", "Mapper database reset")
    end -- if they really want to
  </send>
  </alias>


 <!--  mapper find interface, eg. "mapper find shop" -->

<alias
   match="^mapper find ([\w* %d/&quot;]+)$"
   enabled="y"
   sequence="100"
   script="map_find"
   regexp="y"
  >
  </alias>

  <!--  mapper goto interface, eg. "mapper goto 43052FEF" -->

 <alias
   match="mapper goto *"
   enabled="y"
   sequence="100"
   script="map_goto"
  >
  </alias>

  <!--  mapper debug by showing rooms table -->

 <alias
   match="mapper debug"
   enabled="y"
   sequence="100"
   send_to="12"
  >
  <send>
    print (string.rep ("-", 60))
    print "Rooms"
    print (string.rep ("-", 60))
    tprint (rooms)
    print (string.rep ("-", 60))
  </send>
  </alias>

 <alias
   match="mapper where *"
   enabled="y"
   sequence="100"
   script="map_where"
  >

  </alias>

  <!--  zooming aliases -->

 <alias
   match="mapper zoom out"
   enabled="y"
   sequence="100"
   omit_from_command_history="y"
   omit_from_output="y"
   script="mapper.zoom_out"
  >
  </alias>

<alias
   match="mapper zoom in"
   enabled="y"
   sequence="100"
   omit_from_command_history="y"
   omit_from_output="y"
   script="mapper.zoom_in"
  >
  </alias>

  <!--  show/hide mapper -->

  <alias
   match="mapper hide"
   enabled="y"
   sequence="100"
   script="mapper.hide"
  >
  </alias>

   <alias
   match="mapper show"
   enabled="y"
   sequence="100"
   script="mapper.show"
  >
  </alias>

  <alias
   script="OnHelp"
   match="mapper help"
   enabled="y"
  >
  </alias>

</aliases>

<!--  Timers  -->

<timers>
  <timer script="update_buttons"
         enabled="y"
         second="0.2"
   >

  </timer>
</timers>


<!--  Script  -->

<script>
    dofile (GetPluginInfo (GetPluginID (), 20) .. "Learning_Mapper.lua")
</script>

</muclient>
